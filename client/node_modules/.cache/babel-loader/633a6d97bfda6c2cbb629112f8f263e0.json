{"ast":null,"code":"var _jsxFileName = \"/home/nick/Code/syncify/client/src/App.js\";\n// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n\n/** @jsx jsx */\nimport { css, jsx, Global } from '@emotion/react';\nimport React, { useState, useEffect } from 'react';\nimport * as $ from \"jquery\";\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport Lightbulb from './components/lightbulbs.js';\n\nfunction App() {\n  const [bridge, setBridge] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [lights, setLights] = useState([]);\n  useEffect(() => {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n    }\n  }, []); // this.getLights()\n  //   .then(res => console.log(res))\n  //   .catch(err => console.log(err));\n  // this.connectBridgeWithLights()\n  //   .then(res => this.setState({ response: res.express }))\n  //   .catch(err => console.log(err));\n  // this.connectBridge()\n  // .then(res => {_bridge = res.express; console.log(\"hey: \" + res.express) })\n  // .catch(err => console.log(err))\n  // connectBridgeWithLights = async () => {\n  //   const response = await fetch('/api/discBridges');\n  //   const body = await response.json();\n  //   console.log(body)\n  //   if (response.status !== 200) throw Error(body.message);\n  //   console.log(\"LIGHTS\")\n  //   response = await fetch('/api/allLights');\n  //   body = await response.json();\n  //   console.log(body)\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // }\n\n  async function connectBridge() {\n    const response = await fetch('/api/discBridges');\n    const body = await response.json();\n    console.log(body);\n    setBridge(body.connected);\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  }\n\n  ;\n\n  async function getLights() {\n    const response = await fetch('/api/allLights');\n    const body = await response.json();\n    console.log(body);\n    if (response.status !== 200) throw Error(body.message);\n    var l = [];\n\n    for (var i = 0; i < body.length; i++) {\n      var b = body[i];\n      var bulb = {};\n      bulb['id'] = b.data.id;\n      bulb['name'] = b.data.name;\n      bulb['color'] = b.data.state.xy;\n      bulb['on'] = b.data.state.on;\n      bulb['bri'];\n      l.push(bulb);\n      console.log(bulb);\n    }\n\n    setLights(l);\n    return l;\n  }\n\n  ;\n  const global = css`\n  @import url('https://fonts.googleapis.com/css?family=Ubuntu&display=swap');\n  body{\n      margin:0px;\n      padding: 0px;\n      background-color: LightSlateGrey;\n      width: 100%;\n      height: 100%;\n      color: HoneyDew;\n  }\n  html{\n      font-family: 'Ubuntu', sans-serif; \n      width: 100%;\n      height: 100%;\n      margin: 0%;\n      padding: 0%;\n  }\n  h1{\n      margin-left: 3%; \n  }\n  .centerH{\n    display: block;\n    margin: auto;\n    width: 50%;\n    border: 3px solid green;\n  }\n  .btn{\n    border: 2px solid HoneyDew;\n    border-radius: 5px;\n    color: HoneyDew;\n    text-decoration: none;\n    padding: 5px;\n    background-color: rgba(0,0,0,0);\n    text-align: center;\n    width: 13%;\n    margin-top:1%;\n    font-size: 12pt;\n  }`;\n  return jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, jsx(Global, {\n    styles: global,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  }), jsx(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Syncify\"), !token && jsx(\"a\", {\n    className: \"btn centerH btn--loginApp-link\",\n    styles: css`top: 10%;`,\n    href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Login to Spotify\"), token && jsx(\"div\", {\n    className: \"centerH\",\n    styles: css`height: 50%; width: 100%; top: 10%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, jsx(SpotifyPlayer, {\n    token: token,\n    autoPlay: true,\n    magnifySliderOnHover: true,\n    syncExternalDevice: true,\n    name: \"Syncify\",\n    callback: State => analysis(State, token),\n    uris: ['spotify:artist:0L8ExT028jH3ddEcZwqJJ5'],\n    styles: {\n      height: '35%',\n      activeColor: '#F0FFF0',\n      bgColor: '#F0FFF0',\n      color: '#778899',\n      loaderColor: '#F0FFF0',\n      trackArtistColor: '#778899',\n      trackNameColor: '#778899',\n      sliderColor: '#F0FFF0',\n      sliderHandleColor: '#F0FFF0',\n      sliderHeight: 5,\n      sliderHandleBorderRadius: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), !bridge && jsx(\"button\", {\n    className: \"btn centerH btn--loginApp-link\",\n    styles: css`width: 10%;`,\n    onClick: async () => await connectBridge(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Connect Hue Bridge\"), lights && lights.map((l, i) => jsx(Lightbulb, Object.assign({\n    key: i\n  }, l, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 32\n    }\n  }))), bridge && jsx(\"button\", {\n    className: \"btn  btn--loginApp-link\",\n    onClick: async () => await getLights(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Get Lights\")));\n} //bubbles.map((b, i) => <Bubble key={i} {...b} />)\n\n\nconst authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = \"00687daa92064794bc08458536d97d0d\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\", \"user-read-email\", \"user-read-private\", \"app-remote-control\", \"streaming\", \"user-modify-playback-state\"]; // Get the hash of the url\n\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nfunction analysis(state, token) {\n  console.log(state);\n\n  if (state.play === false) {\n    console.log(\"black\");\n  } else {\n    $.ajax({\n      url: \"https://api.spotify.com/v1/audio-analysis/\" + state.track.id,\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: res => {\n        console.log(res);\n        let duration = res.track.duration;\n        let segments = res.segments.map(segment => {\n          return {\n            start: segment.start / duration,\n            duration: segment.duration / duration,\n            loudness: 1 - Math.min(Math.max(segment.loudness_max, -35), 0) / -35\n          };\n        });\n        let min = Math.min(...segments.map(s => s.loudness));\n        let max = Math.max(...segments.map(s => s.loudness));\n        let levels = [];\n        console.log(segments);\n\n        for (let i = 0.000; i < 1; i += 0.001) {\n          let s = segments.find(segment => {\n            return i <= segment.start + segment.duration;\n          });\n          let loudness = Math.round(s.loudness / max * 100) / 100;\n          levels.push(loudness);\n        }\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nick/Code/syncify/client/src/App.js"],"names":["css","jsx","Global","React","useState","useEffect","$","SpotifyPlayer","Lightbulb","App","bridge","setBridge","token","setToken","lights","setLights","_token","hash","access_token","connectBridge","response","fetch","body","json","console","log","connected","status","Error","message","getLights","l","i","length","b","bulb","data","id","name","state","xy","on","push","global","authEndpoint","clientId","redirectUri","scopes","join","State","analysis","height","activeColor","bgColor","color","loaderColor","trackArtistColor","trackNameColor","sliderColor","sliderHandleColor","sliderHeight","sliderHandleBorderRadius","map","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","play","ajax","url","track","type","beforeSend","xhr","setRequestHeader","success","res","duration","segments","segment","start","loudness","Math","min","max","loudness_max","s","levels","find","round","error","err"],"mappings":"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","sourcesContent":["// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { css, jsx, Global } from '@emotion/react'\nimport React, { useState, useEffect } from 'react';\nimport * as $ from \"jquery\";\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport Lightbulb from './components/lightbulbs.js';\n\nfunction App() {\n  const [bridge, setBridge] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [lights, setLights] = useState([]);\n\n  useEffect(() => {\n    // Set token\n    let _token = hash.access_token; \n    if (_token) {\n      setToken(_token)\n    }\n  },[]);\n    // this.getLights()\n    //   .then(res => console.log(res))\n    //   .catch(err => console.log(err));\n\n    // this.connectBridgeWithLights()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n\n    // this.connectBridge()\n    // .then(res => {_bridge = res.express; console.log(\"hey: \" + res.express) })\n    // .catch(err => console.log(err))\n\n  // connectBridgeWithLights = async () => {\n  //   const response = await fetch('/api/discBridges');\n  //   const body = await response.json();\n  //   console.log(body)\n  //   if (response.status !== 200) throw Error(body.message);\n  //   console.log(\"LIGHTS\")\n  //   response = await fetch('/api/allLights');\n  //   body = await response.json();\n  //   console.log(body)\n  //   if (response.status !== 200) throw Error(body.message);\n    \n  //   return body;\n  // }\n\n  async function connectBridge(){\n    const response = await fetch('/api/discBridges');\n    const body = await response.json();\n    console.log(body)\n    setBridge(body.connected);\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  async function getLights(){\n    const response = await fetch('/api/allLights');\n    const body = await response.json();\n    console.log(body)\n    if (response.status !== 200) throw Error(body.message);\n    var l = [];\n    for (var i = 0; i < body.length; i++){\n      var b = body[i];\n      var bulb = {}\n      bulb['id'] = b.data.id\n      bulb['name'] = b.data.name\n      bulb['color'] = b.data.state.xy\n      bulb['on'] = b.data.state.on\n      bulb['bri']\n      l.push(bulb);\n      console.log(bulb);\n    }\n    setLights(l);\n    return l;\n  };\n\n  const global = css`\n  @import url('https://fonts.googleapis.com/css?family=Ubuntu&display=swap');\n  body{\n      margin:0px;\n      padding: 0px;\n      background-color: LightSlateGrey;\n      width: 100%;\n      height: 100%;\n      color: HoneyDew;\n  }\n  html{\n      font-family: 'Ubuntu', sans-serif; \n      width: 100%;\n      height: 100%;\n      margin: 0%;\n      padding: 0%;\n  }\n  h1{\n      margin-left: 3%; \n  }\n  .centerH{\n    display: block;\n    margin: auto;\n    width: 50%;\n    border: 3px solid green;\n  }\n  .btn{\n    border: 2px solid HoneyDew;\n    border-radius: 5px;\n    color: HoneyDew;\n    text-decoration: none;\n    padding: 5px;\n    background-color: rgba(0,0,0,0);\n    text-align: center;\n    width: 13%;\n    margin-top:1%;\n    font-size: 12pt;\n  }`;\n  return (\n    <div className=\"App\">\n       <Global styles={global}/>\n      <header className=\"App-header\">\n        <h1>Syncify</h1>\n        {!token && (\n          <a\n            className=\"btn centerH btn--loginApp-link\"\n            styles={css`top: 10%;`}\n            href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n          >\n            Login to Spotify\n          </a>\n        )}\n        {token && (\n          <div className=\"centerH\" styles={css`height: 50%; width: 100%; top: 10%`}>\n          <SpotifyPlayer\n                token={token}\n                autoPlay={true}\n                magnifySliderOnHover={true}\n                syncExternalDevice={true}\n                name=\"Syncify\"\n                callback={(State) => analysis(State, token)}\n                uris={['spotify:artist:0L8ExT028jH3ddEcZwqJJ5']}\n                styles={{\n                  height: '35%',\n                  activeColor: '#F0FFF0',\n                  bgColor: '#F0FFF0',\n                  color: '#778899',\n                  loaderColor: '#F0FFF0',\n                  trackArtistColor: '#778899',\n                  trackNameColor: '#778899',\n                  sliderColor: '#F0FFF0',\n                  sliderHandleColor: '#F0FFF0',\n                  sliderHeight: 5,\n                  sliderHandleBorderRadius: 7\n                }}\n          />\n          </div>\n        )}\n        {!bridge && (\n        <button className=\"btn centerH btn--loginApp-link\"\n                styles={css`width: 10%;`}\n                onClick={async () => await connectBridge()}>\n            Connect Hue Bridge\n        </button>)}\n        {lights && (\n          lights.map((l, i) => <Lightbulb key={i} {...l}/>)\n        )}\n        {bridge && (\n        <button className=\"btn  btn--loginApp-link\"\n                onClick={async () => await getLights()}>\n            Get Lights\n        </button>)}\n      </header>\n    </div>\n  );\n}\n//bubbles.map((b, i) => <Bubble key={i} {...b} />)\nconst authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = \"00687daa92064794bc08458536d97d0d\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"user-read-email\",\n  \"user-read-private\",\n  \"app-remote-control\",\n  \"streaming\",\n  \"user-modify-playback-state\"\n];\n// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nfunction analysis(state, token) {\n  console.log(state)\n  if (state.play === false){\n    console.log(\"black\")\n  }\n  else{\n    $.ajax({\n      url: \"https://api.spotify.com/v1/audio-analysis/\" + state.track.id,\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (res) => {\n        console.log(res);\n        let duration = res.track.duration\n        let segments = res.segments.map(segment => {\n          return {\n            start: segment.start / duration,\n            duration: segment.duration / duration,\n            loudness: 1 - (Math.min(Math.max(segment.loudness_max, -35), 0) / -35)\n          }\n        })\n\n        let min = Math.min(...segments.map(s => s.loudness))\n        let max = Math.max(...segments.map(s => s.loudness))\n        let levels = []\n        console.log(segments)\n        for (let i = 0.000; i < 1; i += 0.001) {\n          let s = segments.find(segment => {\n            return i <= segment.start + segment.duration\n          })\n          let loudness = Math.round((s.loudness / max) * 100) / 100\n          levels.push(loudness)\n\n        }\n\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    });  \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}