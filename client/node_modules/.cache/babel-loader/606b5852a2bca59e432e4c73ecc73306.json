{"ast":null,"code":"var _jsxFileName = \"/home/nick/Code/syncify/client/src/components/lightbulbs.js\";\nimport React from 'react'; // this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n\n/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/react';\n\nconst bulbSVG = require('./../images/lightbulb.svg');\n\nfunction Lightbulb({\n  id,\n  name,\n  color,\n  state,\n  bri\n}) {\n  const rgb = xyBriToRgb(color[0], color[1], bri);\n  console.log(rgb);\n  const rgbString = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n  const on = undefined;\n\n  if (state) {}\n\n  const container = css`border: 4px solid ${rgbString}; border-radius: 20px; width: 20%; display: inline-block; margin: 1%;`;\n  const svgStyle = css`margin: 5px;`;\n  const nameStyle = css`color: ${rgbString}; float: left; margin: 5px;`;\n  const stateStyle = css`color: ${rgbString}; float: right; display: inline-block; margin: 5px;`;\n  return jsx(\"div\", {\n    css: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, jsx(\"img\", {\n    src: bulbSVG,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), jsx(\"div\", {\n    css: nameStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, name), jsx(\"div\", {\n    css: stateStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, on));\n}\n\nfunction xyBriToRgb(x, y, bri) {\n  var z = 1.0 - x - y;\n  var Y = bri / 255.0; // Brightness of lamp\n\n  var X = Y / y * x;\n  var Z = Y / y * z;\n  var r = X * 1.612 - Y * 0.203 - Z * 0.302;\n  var g = -X * 0.509 + Y * 1.412 + Z * 0.066;\n  var b = X * 0.026 - Y * 0.072 + Z * 0.962;\n  r = r <= 0.0031308 ? 12.92 * r : (1.0 + 0.055) * Math.pow(r, 1.0 / 2.4) - 0.055;\n  g = g <= 0.0031308 ? 12.92 * g : (1.0 + 0.055) * Math.pow(g, 1.0 / 2.4) - 0.055;\n  b = b <= 0.0031308 ? 12.92 * b : (1.0 + 0.055) * Math.pow(b, 1.0 / 2.4) - 0.055;\n  var maxValue = Math.max(r, g, b);\n  r /= maxValue;\n  g /= maxValue;\n  b /= maxValue;\n  r = Math.round(r * 255);\n\n  if (r < 0) {\n    r = 0;\n  }\n\n  g = Math.round(g * 255);\n\n  if (g < 0) {\n    g = 0;\n  }\n\n  b = Math.round(b * 255);\n\n  if (b < 0) {\n    b = 0;\n  }\n\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n}\n\nexport default Lightbulb;","map":{"version":3,"sources":["/home/nick/Code/syncify/client/src/components/lightbulbs.js"],"names":["React","css","jsx","bulbSVG","require","Lightbulb","id","name","color","state","bri","rgb","xyBriToRgb","console","log","rgbString","r","g","b","on","undefined","container","svgStyle","nameStyle","stateStyle","x","y","z","Y","X","Z","Math","pow","maxValue","max","round"],"mappings":"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","sourcesContent":["import React from 'react';\n// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nconst bulbSVG = require('./../images/lightbulb.svg');\n\nfunction Lightbulb({id, name, color, state, bri}){\n    const rgb = xyBriToRgb(color[0], color[1], bri)\n    console.log(rgb)\n    const rgbString = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n    const on = undefined;\n    if (state){\n        \n    }\n\n    const container = css`border: 4px solid ${rgbString}; border-radius: 20px; width: 20%; display: inline-block; margin: 1%;`;\n    const svgStyle = css`margin: 5px;`;\n    const nameStyle = css`color: ${rgbString}; float: left; margin: 5px;`;\n    const stateStyle = css`color: ${rgbString}; float: right; display: inline-block; margin: 5px;`;\n    return(\n        <div css={container}>\n            <img src={bulbSVG} alt={name}/>\n            <div css={nameStyle}>{name}</div>\n            <div css={stateStyle}>{on}</div>\n        </div>\n    )\n}\n\nfunction xyBriToRgb(x, y, bri){\n    var z = 1.0 - x - y;\n    var Y = bri / 255.0; // Brightness of lamp\n    var X = (Y / y) * x;\n    var Z = (Y / y) * z;\n    var r = X * 1.612 - Y * 0.203 - Z * 0.302;\n    var g = -X * 0.509 + Y * 1.412 + Z * 0.066;\n    var b = X * 0.026 - Y * 0.072 + Z * 0.962;\n    r = r <= 0.0031308 ? 12.92 * r : (1.0 + 0.055) * Math.pow(r, (1.0 / 2.4)) - 0.055;\n    g = g <= 0.0031308 ? 12.92 * g : (1.0 + 0.055) * Math.pow(g, (1.0 / 2.4)) - 0.055;\n    b = b <= 0.0031308 ? 12.92 * b : (1.0 + 0.055) * Math.pow(b, (1.0 / 2.4)) - 0.055;\n    var maxValue = Math.max(r,g,b);\n    r /= maxValue;\n    g /= maxValue;\n    b /= maxValue;\n    r = Math.round(r * 255); if (r < 0) { r = 0; }\n    g = Math.round(g * 255); if (g < 0) { g = 0; }\n    b = Math.round(b * 255); if (b < 0) { b = 0; }\n    return {\n        r :r,\n        g :g,\n        b :b\n    }\n}\nexport default Lightbulb;"]},"metadata":{},"sourceType":"module"}